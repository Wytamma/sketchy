profiles {
    local {
        process.executor = "local"
    }
    cluster {
        process.executor = "pbspro"
        process.clusterOptions = "-S /bin/bash -v PATH=/rdsi/vol08/homes/jc225327/slytherin/bin:$PATH"
    }
}

params {

    prefix                  =           "test"
    outdir                  =           "sketchy_out"

    mode                    =           "bootstrap"

    fastq                   =           "*.fq"
    sketch                  =           "mrsa_15_1000.msh"
    sketch_data             =           "sketchy.merge.tsv"
    bootstraps              =           100
    sample_reads            =           10000
    predict_reads           =           1000
    predict_ncpu            =           1

    fasta                   =           ""
    sketch_kmer             =           [15, 16, 17, 18, 19, 20, 21]
    sketch_size             =           [1000]
    fasta_glob              =           "*"

}

process {

    errorStrategy = "ignore"

    withLabel: bootstrap {
        conda = "/rdsi/vol08/homes/jc225327/slytherin/envs/sketchy"
        cpus = 1
        memory = "4G"
        time = "2h"
    }
    withLabel: predict {
        conda = "/rdsi/vol08/homes/jc225327/slytherin/envs/sketchy"
        cpus = 1
        memory = "4G"
        time = "1h"
    }

}


sketch = file(params.sketch)
sketch_data = file(params.sketch_data)

process predictBootstrap {

    label "sketchy"
    label "predict"

    tag { "Predicting sketchy scores on bootstrap replicate." }
    publishDir "${params.outdir}/${id}/", mode: "copy"

    input:
    file(replicate) from predict_bootstrap
    val id from predict_id

    output:
    file("${replicate}.tab")

    """
    sketchy pboot -f $replicate -s $sketch -d $sketch_data -r $params.predict_reads \
    -c $task.cpus -o . -p $replicate
    """
}
